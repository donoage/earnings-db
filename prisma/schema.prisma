// Prisma schema for earnings database

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Company logos from Polygon
model Logo {
  ticker       String   @id @db.VarChar(10)
  iconUrl      String?  @map("icon_url") @db.Text
  logoUrl      String?  @map("logo_url") @db.Text
  companyName  String   @map("company_name") @db.VarChar(255)
  exchange     String?  @db.VarChar(20)
  updatedAt    DateTime @default(now()) @map("updated_at") @db.Timestamp(6)

  @@map("logos")
}

// Earnings events
model Earning {
  id                      String    @id @db.VarChar(50)
  ticker                  String    @db.VarChar(10)
  date                    DateTime  @db.Date
  time                    String?   @db.VarChar(10)
  dateConfirmed           Int       @default(0) @map("date_confirmed") @db.SmallInt
  companyName             String    @map("company_name") @db.VarChar(255)
  exchange                String?   @db.VarChar(20)
  currency                String?   @db.VarChar(5)
  period                  String?   @db.VarChar(10)
  periodYear              Int?      @map("period_year")
  epsType                 String?   @map("eps_type") @db.VarChar(10)
  epsEstimate             Decimal?  @map("eps_estimate") @db.Decimal(10, 4)
  epsActual               Decimal?  @map("eps_actual") @db.Decimal(10, 4)
  epsPrior                Decimal?  @map("eps_prior") @db.Decimal(10, 4)
  epsSurprise             Decimal?  @map("eps_surprise") @db.Decimal(10, 4)
  epsSurprisePercent      Decimal?  @map("eps_surprise_percent") @db.Decimal(10, 4)
  revenueType             String?   @map("revenue_type") @db.VarChar(10)
  revenueEstimate         Decimal?  @map("revenue_estimate") @db.Decimal(20, 2)
  revenueActual           Decimal?  @map("revenue_actual") @db.Decimal(20, 2)
  revenuePrior            Decimal?  @map("revenue_prior") @db.Decimal(20, 2)
  revenueSurprise         Decimal?  @map("revenue_surprise") @db.Decimal(20, 2)
  revenueSurprisePercent  Decimal?  @map("revenue_surprise_percent") @db.Decimal(10, 4)
  importance              Int       @default(0) @db.SmallInt
  notes                   String?   @db.Text
  updatedAt               DateTime  @default(now()) @map("updated_at") @db.Timestamp(6)

  @@index([ticker, date], name: "idx_ticker_date")
  @@index([date, importance], name: "idx_date_importance")
  @@index([date], name: "idx_date")
  @@map("earnings")
}

// Company fundamentals
model Fundamental {
  ticker              String    @id @db.VarChar(10)
  companyName         String    @map("company_name") @db.VarChar(255)
  exchange            String?   @db.VarChar(20)
  sector              String?   @db.VarChar(100)
  industry            String?   @db.VarChar(100)
  website             String?   @db.VarChar(255)
  description         String?   @db.Text
  logoUrl             String?   @map("logo_url") @db.Text
  marketCap           Decimal?  @map("market_cap") @db.Decimal(20, 2)
  sharesOutstanding   Decimal?  @map("shares_outstanding") @db.Decimal(20, 2)
  currentPrice        Decimal?  @map("current_price") @db.Decimal(12, 4)
  currency            String?   @db.VarChar(5)
  averageVolume       Decimal?  @map("average_volume") @db.Decimal(20, 2)
  week52High          Decimal?  @map("week_52_high") @db.Decimal(12, 4)
  week52Low           Decimal?  @map("week_52_low") @db.Decimal(12, 4)
  
  // Valuation ratios
  priceToEarnings     Decimal?  @map("price_to_earnings") @db.Decimal(10, 4)
  priceToBook         Decimal?  @map("price_to_book") @db.Decimal(10, 4)
  priceToSales        Decimal?  @map("price_to_sales") @db.Decimal(10, 4)
  priceToCashFlow     Decimal?  @map("price_to_cash_flow") @db.Decimal(10, 4)
  priceToFreeCashFlow Decimal?  @map("price_to_free_cash_flow") @db.Decimal(10, 4)
  enterpriseValue     Decimal?  @map("enterprise_value") @db.Decimal(20, 2)
  evToSales           Decimal?  @map("ev_to_sales") @db.Decimal(10, 4)
  evToEbitda          Decimal?  @map("ev_to_ebitda") @db.Decimal(10, 4)
  
  // Profitability ratios
  profitMargin        Decimal?  @map("profit_margin") @db.Decimal(10, 4)
  operatingMargin     Decimal?  @map("operating_margin") @db.Decimal(10, 4)
  grossMargin         Decimal?  @map("gross_margin") @db.Decimal(10, 4)
  returnOnAssets      Decimal?  @map("return_on_assets") @db.Decimal(10, 4)
  returnOnEquity      Decimal?  @map("return_on_equity") @db.Decimal(10, 4)
  
  // Liquidity ratios
  debtToEquity        Decimal?  @map("debt_to_equity") @db.Decimal(10, 4)
  currentRatio        Decimal?  @map("current_ratio") @db.Decimal(10, 4)
  quickRatio          Decimal?  @map("quick_ratio") @db.Decimal(10, 4)
  cashRatio           Decimal?  @map("cash_ratio") @db.Decimal(10, 4)
  
  // Cash flow & dividends
  freeCashflow        Decimal?  @map("free_cashflow") @db.Decimal(20, 2)
  dividendYield       Decimal?  @map("dividend_yield") @db.Decimal(10, 4)
  dividendRate        Decimal?  @map("dividend_rate") @db.Decimal(10, 4)
  
  // Income statement metrics
  revenue             Decimal?  @map("revenue") @db.Decimal(20, 2)
  grossProfit         Decimal?  @map("gross_profit") @db.Decimal(20, 2)
  operatingIncome     Decimal?  @map("operating_income") @db.Decimal(20, 2)
  netIncome           Decimal?  @map("net_income") @db.Decimal(20, 2)
  ebitda              Decimal?  @map("ebitda") @db.Decimal(20, 2)
  earningsPerShare    Decimal?  @map("earnings_per_share") @db.Decimal(10, 4)
  
  employees           Int?
  
  // Balance Sheet fields
  totalAssets         Decimal?  @map("total_assets") @db.Decimal(20, 2)
  currentAssets       Decimal?  @map("current_assets") @db.Decimal(20, 2)
  totalLiabilities    Decimal?  @map("total_liabilities") @db.Decimal(20, 2)
  currentLiabilities  Decimal?  @map("current_liabilities") @db.Decimal(20, 2)
  totalEquity         Decimal?  @map("total_equity") @db.Decimal(20, 2)
  cash                Decimal?  @map("cash") @db.Decimal(20, 2)
  longTermDebt        Decimal?  @map("long_term_debt") @db.Decimal(20, 2)
  
  // Cash Flow fields
  operatingCashFlow   Decimal?  @map("operating_cash_flow") @db.Decimal(20, 2)
  investingCashFlow   Decimal?  @map("investing_cash_flow") @db.Decimal(20, 2)
  financingCashFlow   Decimal?  @map("financing_cash_flow") @db.Decimal(20, 2)
  capex               Decimal?  @map("capex") @db.Decimal(20, 2)
  
  updatedAt           DateTime  @default(now()) @map("updated_at") @db.Timestamp(6)

  @@map("fundamentals")
}

// News articles from Polygon
model News {
  id              String    @id @db.VarChar(100)
  ticker          String?   @db.VarChar(10)
  title           String    @db.Text
  author          String?   @db.VarChar(255)
  publishedUtc    DateTime  @map("published_utc") @db.Timestamp(6)
  articleUrl      String    @map("article_url") @db.Text
  imageUrl        String?   @map("image_url") @db.Text
  description     String?   @db.Text
  publisherName   String    @map("publisher_name") @db.VarChar(255)
  publisherUrl    String?   @map("publisher_url") @db.Text
  publisherLogo   String?   @map("publisher_logo") @db.Text
  tickers         String[]  @db.VarChar(10)
  keywords        String[]  @db.VarChar(100)
  sentiment       String?   @db.VarChar(20)
  sentimentScore  Decimal?  @map("sentiment_score") @db.Decimal(5, 4)
  updatedAt       DateTime  @default(now()) @map("updated_at") @db.Timestamp(6)

  @@index([ticker, publishedUtc], name: "idx_ticker_published")
  @@index([publishedUtc], name: "idx_published")
  @@map("news")
}

